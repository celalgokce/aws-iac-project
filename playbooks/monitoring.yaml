---
- name: Install and Configure Monitoring Stack
  hosts: web
  become: true
  vars:
    ansible_python_interpreter: /usr/bin/python3
    node_exporter_version: "1.8.1"
    prometheus_version: "2.47.0"

  tasks:
    ### Node Exporter Installation ###
    - name: Create node_exporter user
      user:
        name: node_exporter
        system: yes
        shell: /bin/false
        home: /var/lib/node_exporter
        create_home: no

    - name: Download Node Exporter
      get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        dest: /tmp/node_exporter.tar.gz

    - name: Extract Node Exporter
      unarchive:
        src: /tmp/node_exporter.tar.gz
        dest: /tmp/
        remote_src: yes

    - name: Copy Node Exporter binary
      copy:
        src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
        dest: /usr/local/bin/node_exporter
        mode: '0755'
        owner: node_exporter
        group: node_exporter
        remote_src: yes

    - name: Create Node Exporter systemd service
      copy:
        dest: /etc/systemd/system/node_exporter.service
        content: |
          [Unit]
          Description=Node Exporter
          After=network.target

          [Service]
          User=node_exporter
          Group=node_exporter
          Type=simple
          ExecStart=/usr/local/bin/node_exporter --web.listen-address=:9100

          [Install]
          WantedBy=multi-user.target

    ### Prometheus Installation ###
    - name: Create prometheus user
      user:
        name: prometheus
        system: yes
        shell: /bin/false
        home: /var/lib/prometheus
        create_home: yes

    - name: Create Prometheus directories
      file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
        mode: '0755'
      loop:
        - /etc/prometheus
        - /var/lib/prometheus

    - name: Download Prometheus
      get_url:
        url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
        dest: /tmp/prometheus.tar.gz

    - name: Extract Prometheus
      unarchive:
        src: /tmp/prometheus.tar.gz
        dest: /tmp/
        remote_src: yes

    - name: Copy Prometheus binaries
      copy:
        src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
        dest: "/usr/local/bin/{{ item }}"
        mode: '0755'
        owner: prometheus
        group: prometheus
        remote_src: yes
      loop:
        - prometheus
        - promtool

    - name: Create Prometheus configuration
      copy:
        dest: /etc/prometheus/prometheus.yml
        content: |
          global:
            scrape_interval: 15s
            evaluation_interval: 15s

          scrape_configs:
            - job_name: 'prometheus'
              static_configs:
                - targets: ['localhost:9090']

            - job_name: 'node_exporter'
              static_configs:
                - targets: ['localhost:9100']

            - job_name: 'flask_app'
              static_configs:
                - targets: ['localhost:5000']
              metrics_path: '/health'
        owner: prometheus
        group: prometheus
        mode: '0644'

    - name: Create Prometheus systemd service
      copy:
        dest: /etc/systemd/system/prometheus.service
        content: |
          [Unit]
          Description=Prometheus
          After=network.target

          [Service]
          User=prometheus
          Group=prometheus
          Type=simple
          ExecStart=/usr/local/bin/prometheus \
            --config.file=/etc/prometheus/prometheus.yml \
            --storage.tsdb.path=/var/lib/prometheus/ \
            --web.console.templates=/etc/prometheus/consoles \
            --web.console.libraries=/etc/prometheus/console_libraries \
            --web.listen-address=0.0.0.0:9090 \
            --web.enable-lifecycle

          [Install]
          WantedBy=multi-user.target

    ### Grafana Installation ###
    - name: Add Grafana GPG key
      rpm_key:
        key: https://packages.grafana.com/gpg.key
        state: present

    - name: Add Grafana repository
      yum_repository:
        name: grafana
        description: Grafana OSS Repository
        baseurl: https://packages.grafana.com/oss/rpm
        gpgcheck: yes
        gpgkey: https://packages.grafana.com/gpg.key
        enabled: yes

    - name: Install Grafana
      package:
        name: grafana
        state: present

    - name: Create Grafana datasource configuration
      copy:
        dest: /etc/grafana/provisioning/datasources/prometheus.yml
        content: |
          apiVersion: 1
          datasources:
            - name: Prometheus
              type: prometheus
              access: proxy
              url: http://localhost:9090
              isDefault: true
        owner: grafana
        group: grafana
        mode: '0644'



    - name: Reload systemd daemon
      systemd:
        daemon_reload: true

    - name: Enable and start Node Exporter
      systemd:
        name: node_exporter
        enabled: true
        state: started

    - name: Enable and start Prometheus
      systemd:
        name: prometheus
        enabled: true
        state: started

    - name: Enable and start Grafana
      systemd:
        name: grafana-server
        enabled: true
        state: started

    - name: Wait for services to start
      pause:
        seconds: 10

    - name: Check service status
      command: systemctl is-active {{ item }}
      loop:
        - node_exporter
        - prometheus
        - grafana-server
        - flask-app
      register: service_status

    - name: Display service status
      debug:
        msg: "{{ item.item }} is {{ item.stdout }}"
      loop: "{{ service_status.results }}"